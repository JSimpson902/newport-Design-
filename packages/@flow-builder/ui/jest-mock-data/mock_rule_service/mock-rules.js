export const mockRules =
[
    {
        ruleType:'assignment',
        left:{
            paramType:'Data',
            paramIndex:1,
            dataType:{
                _value_:'Date'
            },
            isCollection:false,
            canBeField:'CanBe',
            canBeSysVar:'CanBe'
        },
        operator:'ASSIGNMENT',
        rhsParams:[
            {
                paramType:'Data',
                paramIndex:1,
                dataType:{
                    _value_:'Date'
                },
                isCollection:false,
                canBeField:'CanBe',
                canBeSysVar:'CanBe'
            },
            {
                paramType:'Data',
                paramIndex:1,
                dataType:{
                    _value_:'DateTime'
                },
                isCollection:false,
                canBeField:'CanBe',
                canBeSysVar:'CanBe'
            }
        ]
    },
    {
        ruleType:'assignment',
        left:{
            paramType:'Data',
            paramIndex:1,
            dataType:{
                _value_:'DateTime'
            },
            isCollection:false,
            canBeField:'CanBe',
            canBeSysVar:'CanBe'
        },
        operator:'ASSIGNMENT',
        rhsParams:[
            {
                paramType:'Data',
                paramIndex:1,
                dataType:{
                    _value_:'Date'
                },
                isCollection:false,
                canBeField:'CanBe',
                canBeSysVar:'CanBe'
            },
            {
                paramType:'Data',
                paramIndex:1,
                dataType:{
                    _value_:'DateTime'
                },
                isCollection:false,
                canBeField:'CanBe',
                canBeSysVar:'CanBe'
            }
        ]
    },
    {
        ruleType:'assignment',
        left:{
            paramType:'Element',
            paramIndex:1,
            elemType:'STAGE',
            isCollection:true,
            canBeField:'CannotBe',
            canBeSysVar:'MustBe'
        },
        operator:'ADD',
        rhsParams:[
            {
                paramType:'Element',
                paramIndex:1,
                elemType:'STAGE',
                isCollection:false,
                canBeField:'CannotBe',
                canBeSysVar:'CanBe'
            }
        ]
    },
    {
        ruleType:'comparison',
        left:{
            paramType:'Element',
            paramIndex:1,
            elemType:'STAGE',
            isCollection:true,
            canBeField:'CannotBe',
            canBeSysVar:'MustBe'
        },
        operator:'ADD',
        rhsParams:[
            {
                paramType:'Element',
                paramIndex:1,
                elemType:'STAGE',
                isCollection:false,
                canBeField:'CannotBe',
                canBeSysVar:'CanBe'
            }
        ]
    },
    // duplicate rule needed for testing removal of duplicates.
    // there will never be a direct copy of a rule, just duplicates on LHS or Operator
    {
        ruleType:'comparison',
        left:{
            paramType:'Element',
            paramIndex:1,
            elemType:'STAGE',
            isCollection:true,
            canBeField:'CannotBe',
            canBeSysVar:'MustBe'
        },
        operator:'ADD',
        rhsParams:[
            {
                paramType:'Element',
                paramIndex:1,
                elemType:'STAGE',
                isCollection:false,
                canBeField:'CannotBe',
                canBeSysVar:'CanBe'
            }
        ]
    },
];
