// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`modelUtils addElement add end complex 1 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-branch-guid",
      "new-end-element-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-branch-guid": Object {
    "childIndex": 0,
    "children": Array [
      "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
      "end-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid:0-branch-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "parent": "branch-guid",
  },
  "branch-guid:0-branch-guid:0-branch-guid:0-end-guid": Object {
    "childIndex": 0,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid:0-branch-guid",
  },
  "end-guid": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid:0-branch-guid",
    "prev": null,
  },
  "new-end-element-guid": Object {
    "childIndex": 1,
    "guid": "new-end-element-guid",
    "isTerminal": true,
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils addElement add end complex 2 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-branch-guid",
      "end-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-branch-guid": Object {
    "childIndex": 0,
    "children": Array [
      "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
      "new-end-element-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid:0-branch-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "branch-guid",
    "nodeType": "branch",
    "parent": "branch-guid",
  },
  "branch-guid:0-branch-guid:0-branch-guid:0-end-guid": Object {
    "childIndex": 0,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid:0-branch-guid",
  },
  "end-guid": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "new-end-element-guid": Object {
    "childIndex": 1,
    "guid": "new-end-element-guid",
    "isTerminal": true,
    "nodeType": "end",
    "parent": "branch-guid:0-branch-guid",
    "prev": null,
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils addElement add end node to left branch of decision with empty branches 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "new-end-element-guid",
      "end-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "end-guid": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "new-end-element-guid": Object {
    "childIndex": 0,
    "guid": "new-end-element-guid",
    "isTerminal": true,
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils addElement add end node to left branch of decision with with non-empty left branch 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-head-guid",
      "end-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-head-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:0-head-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "new-end-element-guid",
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "new-end-element-guid": Object {
    "guid": "new-end-element-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils addElement add end node to left branch of decision with with non-empty right branch 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "new-end-element-guid",
      "branch-guid:1-head-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:1-head-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:1-head-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "end-guid",
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:1-head-guid",
  },
  "new-end-element-guid": Object {
    "childIndex": 0,
    "guid": "new-end-element-guid",
    "isTerminal": true,
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils addFault adds a fault to an element 1`] = `
Object {
  "end-hook-guid": Object {
    "childIndex": -1,
    "guid": "end-hook-guid",
    "isTerminal": true,
    "next": null,
    "nodeType": "end",
    "parent": "faulting-element-guid",
    "prev": null,
  },
  "faulting-element-guid": Object {
    "fault": "end-hook-guid",
    "guid": "faulting-element-guid",
  },
}
`;

exports[`modelUtils connectToElement reconnects to an element on another branch 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      null,
      "branch-guid:1-head-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "branch-guid:1-random-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:1-end2-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:1-end2-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:1-random-guid",
  },
  "branch-guid:1-head-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:1-head-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "next": null,
    "parent": "branch-guid",
  },
  "branch-guid:1-random-guid": Object {
    "guid": "branch-guid:1-random-guid",
    "isCanvasElement": true,
    "next": "branch-guid:1-end2-guid",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils connectToElement reconnects to the merge element 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-head-guid",
      "branch-guid:1-head-guid",
      "branch-guid:2-head-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-head-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:0-head-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "next": null,
    "parent": "branch-guid",
  },
  "branch-guid:1-head-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:1-head-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "next": "branch-guid:1-random-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-random-guid": Object {
    "guid": "branch-guid:1-random-guid",
    "isCanvasElement": true,
    "prev": "branch-guid:1-head-guid",
  },
  "branch-guid:2-head-guid": Object {
    "childIndex": 2,
    "guid": "branch-guid:2-head-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils deleteElement delete nested decision with end elements and reconnect 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
      "branch-guid:1-end-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-branch-guid:0-branch-guid:0-end-guid": Object {
    "childIndex": 0,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "branch-guid:1-end-guid": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:1-end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils deleteElement delete nested decision with end elements and reconnect 2`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      null,
      null,
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "branch-guid:1-end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:1-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:1-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils deleteElement deletes branch head element 1`] = `
Object {
  "branching-element": Object {
    "children": Array [
      null,
      null,
    ],
    "guid": "branching-element",
    "next": "merge-element",
    "prev": null,
  },
  "merge-element": Object {
    "guid": "merge-element",
    "next": null,
    "prev": "branching-element",
  },
}
`;

exports[`modelUtils deleteElement deletes branching element that supports a fault branch as well 1`] = `
Object {
  "branch-head-one": Object {
    "guid": "branch-head-one",
    "next": "merge-element",
    "prev": "screen-element",
  },
  "merge-element": Object {
    "elementType": "END_ELEMENT",
    "guid": "merge-element",
    "next": null,
    "nodeType": "end",
    "prev": "branch-head-one",
  },
  "screen-element": Object {
    "guid": "screen-element",
    "isTerminal": true,
    "next": "branch-head-one",
    "prev": null,
  },
}
`;

exports[`modelUtils deleteElement deletes fully terminated branch element in main flow 1`] = `
Object {
  "end-hook-guid": Object {
    "guid": "end-hook-guid",
    "next": null,
    "nodeType": "end",
    "prev": "first-element",
  },
  "first-element": Object {
    "guid": "first-element",
    "isTerminal": true,
    "next": "end-hook-guid",
    "prev": null,
  },
}
`;

exports[`modelUtils deleteElement deletes fully terminated branchHead element in another branch 1`] = `
Object {
  "end-hook-guid": Object {
    "childIndex": 0,
    "guid": "end-hook-guid",
    "isTerminal": true,
    "next": null,
    "nodeType": "end",
    "parent": "inline-element",
  },
  "first-element": Object {
    "guid": "first-element",
    "next": "inline-element",
    "prev": null,
  },
  "inline-element": Object {
    "children": Array [
      "end-hook-guid",
      null,
    ],
    "guid": "inline-element",
    "next": "last-element",
    "prev": "first-element",
  },
  "last-element": Object {
    "guid": "last-element",
    "next": null,
    "prev": "inline-element",
  },
}
`;

exports[`modelUtils deleteElement deletes inline element 1`] = `
Object {
  "first-element": Object {
    "guid": "first-element",
    "isTerminal": false,
    "next": "last-element",
    "prev": null,
  },
  "last-element": Object {
    "guid": "last-element",
    "next": null,
    "prev": "first-element",
  },
}
`;

exports[`modelUtils deleteElement deletes loop element nested in a decision 1`] = `
Object {
  "decision-element": Object {
    "children": Array [
      null,
      "screen-element",
    ],
    "guid": "decision-element",
    "next": "last-element",
    "prev": "first-element",
  },
  "first-element": Object {
    "guid": "first-element",
    "next": "decision-element",
    "prev": null,
  },
  "last-element": Object {
    "guid": "last-element",
    "next": null,
    "prev": "decision-element",
  },
  "screen-element": Object {
    "childIndex": 1,
    "guid": "screen-element",
    "isTerminal": false,
    "next": null,
    "parent": "decision-element",
    "prev": null,
  },
}
`;

exports[`modelUtils deleteElement in nested branch with ended left branch inlines 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
      "end-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-branch-guid:0-branch-guid:0-end-guid": Object {
    "childIndex": 0,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-branch-guid:0-branch-guid:0-end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "end-guid": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
    "prev": null,
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils deleteElement persisting a terminated branch that has a regular element and an end element 1`] = `
Object {
  "branch-head-one": Object {
    "guid": "branch-head-one",
    "next": "last-element",
    "prev": "first-element",
  },
  "first-element": Object {
    "guid": "first-element",
    "isTerminal": false,
    "next": "branch-head-one",
    "prev": null,
  },
  "last-element": Object {
    "guid": "last-element",
    "next": null,
    "prev": "branch-head-one",
  },
}
`;

exports[`modelUtils deleteElement persisting a terminated branch that has end element as branch head 1`] = `
Object {
  "first-element": Object {
    "guid": "first-element",
    "isTerminal": false,
    "next": "last-element",
    "prev": null,
  },
  "last-element": Object {
    "guid": "last-element",
    "next": null,
    "prev": "first-element",
  },
}
`;

exports[`modelUtils initFlowModel creates a root and links start and end 1`] = `
Object {
  "end-guid": Object {
    "guid": "end-guid",
    "nodeType": "end",
    "prev": "start-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "label": "root",
    "name": "root",
    "next": null,
    "nodeType": "root",
    "prev": null,
    "text": "root",
    "value": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "guid": "start-guid",
    "isTerminal": true,
    "next": "end-guid",
    "nodeType": "start",
    "parent": "root",
    "prev": null,
  },
}
`;

exports[`modelUtils updateChildren deletes branch elements when removing a child 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-head1-guid",
      "branch-guid:2-head3-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end-guid",
    "parent": "branch-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "end-guid",
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:2-head3-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren handles new empty branch in left-most position 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      null,
      "branch-guid:0-head1-guid",
      "branch-guid:1-head2-guid",
      "branch-guid:2-head3-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-head2-guid": Object {
    "childIndex": 2,
    "guid": "branch-guid:1-head2-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "next": "branch-guid:1-random-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-random-guid": Object {
    "guid": "branch-guid:1-random-guid",
    "isCanvasElement": true,
    "prev": "branch-guid:1-head2-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 3,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren handles new empty branch in right-most position 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-head1-guid",
      "branch-guid:1-head2-guid",
      "branch-guid:2-head3-guid",
      null,
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-head2-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:1-head2-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "next": "branch-guid:1-random-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-random-guid": Object {
    "guid": "branch-guid:1-random-guid",
    "isCanvasElement": true,
    "prev": "branch-guid:1-head2-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 2,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren reorders the children 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:1-head2-guid",
      "branch-guid:2-head3-guid",
      "branch-guid:0-head1-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 2,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-head2-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:1-head2-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "next": "branch-guid:1-random-guid",
    "parent": "branch-guid",
  },
  "branch-guid:1-random-guid": Object {
    "guid": "branch-guid:1-random-guid",
    "isCanvasElement": true,
    "prev": "branch-guid:1-head2-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren reorders the children of parent with null children 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:2-head3-guid",
      "branch-guid:0-head1-guid",
      null,
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end-guid",
    "parent": "branch-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren reorders, removes and adds child 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      null,
      "branch-guid:2-head3-guid",
      "branch-guid:0-head1-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": "end-guid",
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 2,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end-guid",
    "parent": "branch-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": false,
    "parent": "branch-guid",
  },
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren when all branches terminals after the update, delete the parent next and decendents 1`] = `
Object {
  "branch-guid": Object {
    "children": Array [
      "branch-guid:0-head1-guid",
      "branch-guid:2-head3-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "prev": "start-guid",
  },
  "branch-guid:0-end1": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end1",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:0-head1-guid",
  },
  "branch-guid:0-head1-guid": Object {
    "childIndex": 0,
    "guid": "branch-guid:0-head1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:0-end1",
    "parent": "branch-guid",
  },
  "branch-guid:2-end2": Object {
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:2-end2",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "branch-guid:2-head3-guid",
  },
  "branch-guid:2-head3-guid": Object {
    "childIndex": 1,
    "guid": "branch-guid:2-head3-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "next": "branch-guid:2-end2",
    "parent": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "branch-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildren when parent has all terminals, creates end nodes for new branches 1`] = `
Object {
  "branch-guid": Object {
    "childIndex": 0,
    "children": Array [
      "branch-guid:0-end1",
      "branch-guid:1-end2",
      "end-hook-guid",
    ],
    "config": Object {},
    "defaultConnectorLabel": "Default Connector Label",
    "elementType": "branch",
    "guid": "branch-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "branch-guid",
    "next": null,
    "nodeType": "branch",
    "parent": "root",
  },
  "branch-guid:0-end1": Object {
    "childIndex": 0,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:0-end1",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
  },
  "branch-guid:1-end2": Object {
    "childIndex": 1,
    "elementType": "END_ELEMENT",
    "guid": "branch-guid:1-end2",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "end-guid",
    "nodeType": "end",
    "parent": "branch-guid",
  },
  "end-hook-guid": Object {
    "childIndex": 2,
    "guid": "end-hook-guid",
    "isTerminal": true,
    "nodeType": "end",
    "parent": "branch-guid",
  },
  "root": Object {
    "children": Array [
      "branch-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
}
`;

exports[`modelUtils updateChildrenOnAddingOrUpdatingTimeTriggers adding a new timeTrigger to start element 1`] = `
Object {
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "screen2-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "screen1-guid": Object {
    "config": Object {},
    "elementType": "Screen",
    "guid": "screen1-guid",
    "isCanvasElement": true,
    "label": "screen-guid",
    "next": "screen2-guid",
    "nodeType": "default",
    "prev": "start-guid",
  },
  "screen2-guid": Object {
    "config": Object {},
    "elementType": "Screen",
    "guid": "screen2-guid",
    "isCanvasElement": true,
    "label": "screen-guid",
    "next": "end-guid",
    "nodeType": "default",
    "prev": "screen1-guid",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "children": Array [
      "start-guid:0-screen1-guid",
      "start-guid:1-screen2-guid",
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "screen1-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildrenOnAddingOrUpdatingTimeTriggers deleting a timeTrigger 1`] = `
Object {
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "screen2-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "screen1-guid": Object {
    "childIndex": 0,
    "config": Object {},
    "elementType": "Screen",
    "guid": "screen1-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "screen-guid",
    "next": "screen2-guid",
    "nodeType": "default",
    "parent": "start-guid",
    "prev": null,
  },
  "screen2-guid": Object {
    "config": Object {},
    "elementType": "Screen",
    "guid": "screen2-guid",
    "isCanvasElement": true,
    "label": "screen-guid",
    "next": "end-guid",
    "nodeType": "default",
    "prev": "screen1-guid",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [
      Object {
        "childReference": "child-reference-guid-1",
      },
      Object {
        "childReference": "child-reference-guid-2",
      },
    ],
    "children": Array [
      "screen1-guid",
    ],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": null,
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildrenOnAddingOrUpdatingTimeTriggers deleting all pre-existing timeTriggers: default branch has branching node 1`] = `
Object {
  "decision1-guid": Object {
    "availableConnections": Array [
      Object {
        "childReference": "outcome1-guid",
        "type": "REGULAR",
      },
      Object {
        "type": "DEFAULT",
      },
    ],
    "childReferences": Array [
      Object {
        "childReference": "outcome1-guid",
      },
    ],
    "children": Array [
      "end1-guid",
      "screen2-guid",
    ],
    "config": Object {},
    "elementType": "BRANCH_ELEMENT",
    "guid": "decision1-guid",
    "label": "default",
    "next": null,
    "nodeType": "branch",
    "prev": "screen1-guid",
  },
  "end1-guid": Object {
    "childIndex": 0,
    "config": Object {},
    "elementType": "END_ELEMENT",
    "guid": "end1-guid",
    "isTerminal": true,
    "label": "default",
    "nodeType": "end",
    "parent": "decision1-guid",
    "prev": null,
  },
  "end2-guid": Object {
    "config": Object {},
    "elementType": "END_ELEMENT",
    "guid": "end2-guid",
    "label": "default",
    "nodeType": "end",
    "prev": "screen2-guid",
  },
  "outcome1-guid": Object {
    "config": Object {},
    "elementType": "OUTCOME",
    "guid": "outcome1-guid",
    "label": "default",
    "nodeType": "default",
  },
  "screen1-guid": Object {
    "config": Object {},
    "elementType": "SCREEN_ELEMENT",
    "guid": "screen1-guid",
    "label": "default",
    "next": "decision1-guid",
    "nodeType": "default",
    "prev": "start-guid",
  },
  "screen2-guid": Object {
    "childIndex": 1,
    "config": Object {},
    "elementType": "SCREEN_ELEMENT",
    "guid": "screen2-guid",
    "isTerminal": true,
    "label": "default",
    "next": "end2-guid",
    "nodeType": "default",
    "parent": "decision1-guid",
    "prev": null,
  },
  "start-guid": Object {
    "childReferences": Array [],
    "config": Object {},
    "elementType": "START_ELEMENT",
    "guid": "start-guid",
    "label": "default",
    "next": "screen1-guid",
    "nodeType": "start",
  },
}
`;

exports[`modelUtils updateChildrenOnAddingOrUpdatingTimeTriggers deleting all pre-existing timeTriggers: default branch is non-terminal 1`] = `
Object {
  "end-guid": Object {
    "elementType": "END_ELEMENT",
    "guid": "end-guid",
    "isCanvasElement": true,
    "label": "end-guid",
    "nodeType": "end",
    "prev": "screen2-guid",
  },
  "root": Object {
    "children": Array [
      "start-guid",
    ],
    "elementType": "root",
    "guid": "root",
    "nodeType": "root",
  },
  "screen1-guid": Object {
    "config": Object {},
    "elementType": "Screen",
    "guid": "screen1-guid",
    "isCanvasElement": true,
    "label": "screen-guid",
    "next": "screen2-guid",
    "nodeType": "default",
    "prev": "start-guid",
  },
  "screen2-guid": Object {
    "config": Object {},
    "elementType": "Screen",
    "guid": "screen2-guid",
    "isCanvasElement": true,
    "label": "screen-guid",
    "next": "end-guid",
    "nodeType": "default",
    "prev": "screen1-guid",
  },
  "start-guid": Object {
    "childIndex": 0,
    "childReferences": Array [],
    "config": Object {},
    "elementType": "start",
    "guid": "start-guid",
    "isCanvasElement": true,
    "isTerminal": true,
    "label": "start-guid",
    "next": "screen1-guid",
    "nodeType": "start",
    "parent": "root",
  },
}
`;

exports[`modelUtils updateChildrenOnAddingOrUpdatingTimeTriggers deleting all pre-existing timeTriggers: default branch is terminal 1`] = `
Object {
  "end1-guid": Object {
    "config": Object {},
    "elementType": "END_ELEMENT",
    "guid": "end1-guid",
    "label": "default",
    "nodeType": "end",
    "prev": "screen1-guid",
  },
  "screen1-guid": Object {
    "config": Object {},
    "elementType": "SCREEN_ELEMENT",
    "guid": "screen1-guid",
    "label": "default",
    "next": "end1-guid",
    "nodeType": "default",
    "prev": "start-guid",
  },
  "start-guid": Object {
    "childReferences": Array [],
    "config": Object {},
    "elementType": "START_ELEMENT",
    "guid": "start-guid",
    "label": "default",
    "next": "screen1-guid",
    "nodeType": "start",
  },
}
`;
