const { readdirSync, writeFileSync } = require('fs');
const { printInfo, printHeader } = require('./utils');
const INDENT_SIZE = 12;
const pathPropertyIndent = () => ' '.repeat(INDENT_SIZE);
const EXCLUDED_FOLDERS = ['jest-report'];
const FLOW_BUILDER_UI_PACKAGE_DIR = 'packages/@flow-builder/ui';

(function genTsConfig(packageDir) {
    const lwcModuleDir = `${packageDir}/src/builder_platform_interaction`;
    printHeader(`Package modules folder: ${lwcModuleDir}`);

    const paths = readdirSync(lwcModuleDir, { withFileTypes: true })
        .filter((dirent) => dirent.isDirectory() && !EXCLUDED_FOLDERS.includes(dirent.name))
        .map(({ name }) => {
            const path = `${pathPropertyIndent()}"builder_platform_interaction/${name}": ["./src/builder_platform_interaction/${name}/${name}.ts"]`;
            printInfo(`Adding path: ${path.trim()} to ${packageDir}/tsconfig.json`);
            return path;
        })
        .join(',\n');

    writeFileSync(
        `${packageDir}/tsconfig.json`,
        `/*  THIS FILE IS AUTO GENERATED BY ./scripts/genTsConfig.js  */
{
    "extends": "../../../tsconfig.json",
    "compilerOptions": {
        "experimentalDecorators": true,
        "declaration": false,
        "noUnusedLocals": false,
        "noImplicitAny": false,
        "outDir": "./build",
        "baseUrl": ".",
         "paths": {
${pathPropertyIndent()}"lightning/accordionSection": ["../../../node_modules/lwc-components-lightning/src/lightning/accordionSection/accordionSection.js"],
${pathPropertyIndent()}"lightning/utils": ["../../../node_modules/lwc-components-lightning/src/lightning/utils/utils.js"],
${pathPropertyIndent()}"builder_platform_interaction/autoLayoutCanvas": ["../auto-layout-canvas/dist/types/index.d.js"],
${pathPropertyIndent()}"builder_platform_interaction/sharedUtils": ["../shared-utils/dist/types/index.d.js"],
${pathPropertyIndent()}"builder_platform_interaction/alcEvents": ["../auto-layout-canvas-ui/src/builder_platform_interaction/alcEvents/alcEvents.ts"],
${pathPropertyIndent()}"builder_platform_interaction/popover": ["../auto-layout-canvas-ui/src/builder_platform_interaction/popover/popover.ts"],
${pathPropertyIndent()}"builder_platform_interaction/popoverTrigger": ["../auto-layout-canvas-ui/src/builder_platform_interaction/popoverTrigger/popoverTrigger.ts"],
${pathPropertyIndent()}"builder_platform_interaction/contextualMenuUtils": ["../auto-layout-canvas-ui/src/builder_platform_interaction/contextualMenuUtils/contextualMenuUtils.ts"],
${pathPropertyIndent()}"builder_platform_interaction/menu": ["../auto-layout-canvas-ui/src/builder_platform_interaction/menu/menu.ts"],
${pathPropertyIndent()}"builder_platform_interaction/alcComponentsUtils": ["../auto-layout-canvas-ui/src/builder_platform_interaction/alcComponentsUtils/alcComponentsUtils.ts"],
${paths}
         }
    },

    "include": ["src/builder_platform_interaction/**/*", "jest-modules/**/*", "jest-mock-data/**/*", "@types", "../shared-utils/@types/index.d.ts"]
}`
    );
})(
    // only auto gen for "@flow-builder/ui"
    FLOW_BUILDER_UI_PACKAGE_DIR
);
